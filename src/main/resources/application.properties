#server.port=8080
spring.data.mongodb.uri=mongodb+srv://admin:dbpassword@cluster0.zqbuh.mongodb.net/myFirstDatabase?retryWrites=true&w=majority

spring.cloud.function.definition=producer;consumer1
  #;consumer2

#spring.cloud.stream.kafka.binder.auto-add-partitions=true
#spring.cloud.stream.bindings.producer-out.producer.partitionCount=1

#spring.cloud.stream.bindings.producer1-out-0.producer.partitionKeyExpression=headers['partitionKey']
#
#spring.cloud.stream.bindings.producer-in-0.group=producerIn
#spring.cloud.stream.bindings.producer-out-0.group=producerOut-1
#spring.cloud.stream.bindings.producer-out-1.group=producerOut-2

spring.cloud.function.application-context.getBeanDefinitionNames[]
#spring.kafka.client-id=poc
#spring.kafka.admin.client-id=test
#spring.kafka.properties.groupId=temp
#spring.kafka.consumer.group-id=consumerGroup
#spring.kafka.producer.client-id=producer
#spring.kafka.listener.client-id=test
spring.cloud.stream.bindings.producer-in-0.group=producerIn
spring.cloud.stream.bindings.producer-out-0.group=producerOut
spring.cloud.stream.bindings.producer-in-0.producer.partitionCount=1
spring.cloud.stream.bindings.producer-in-0.destination=producer-in
spring.cloud.stream.bindings.producer-out-0.destination=producer-out

#spring.cloud.stream.bindings.producer-in-1.destination=producer-in
#spring.cloud.stream.bindings.producer-out-1.destination=producer-out

#spring.cloud.stream.bindings.producer-out-0.group=consumer
#spring.cloud.stream.bindings.consumer1-in-0.group=consumer
#spring.cloud.stream.bindings.consumer2-in-0.group=consumer


#spring.kafka.consumer.group-id=


#spring.cloud.stream.bindings.input.group=consumer;


#spring.cloud.stream.bindings.consumer1-in-0.group=producer-out



spring.cloud.stream.bindings.consumer1-in-0.group=consumerGroup
spring.cloud.stream.bindings.consumer1-in-0.destination=producer-out
#spring.cloud.stream.bindings.consumer2-in-0.destination=producer-out


